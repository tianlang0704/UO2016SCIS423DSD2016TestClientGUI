/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg423gui;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import static dsd2016.api.DSD2016JAVA.rsImgValidateUser;
import static dsd2016.api.DSD2016JAVA.validateUser;
import java.awt.Toolkit;
import java.awt.event.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;


/**
 *
 * @author Emmalie
 */
public class TestClientLogin extends javax.swing.JFrame implements ActionListener {

    
    int count = 0;
    BufferedImage picture;
    String images = "";
    String[] info;
    String[] user_info;
    String ID = "";
    String message = "";
    TestClientReg t;
    static StringBuilder outMsg = new StringBuilder();
    static Webcam webcam = Webcam.getDefault();
    static JButton cap = new javax.swing.JButton();
    static JFrame window = new JFrame("webcam panel");
    static ByteArrayOutputStream os = new ByteArrayOutputStream();
    
    /**
     * Creates new form TestClientLogin
     */
    public TestClientLogin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        user_id = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        Login = new javax.swing.JButton();
        SignUp = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Camera = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Welcome"));

        user_id.setText("jPasswordField1");

        jLabel2.setText("ID");

        Login.setText("Login");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });

        SignUp.setText("Sign up");
        SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpActionPerformed(evt);
            }
        });

        jLabel3.setText("Picture");

        Camera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pkg423gui/FotoFlexer_Photo.jpg"))); // NOI18N
        Camera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CameraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Login)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SignUp))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(30, 30, 30)
                                .addComponent(Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(user_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Login)
                    .addComponent(SignUp))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        user_id.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpActionPerformed
        
        setVisible(false);
        t = new TestClientReg();
        t.setVisible(true);
    }//GEN-LAST:event_SignUpActionPerformed

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        
        
        ID = new String(user_id.getPassword());
        int valid = rsImgValidateUser(ID, picture, outMsg);
        if(valid == 1){
            setVisible(false);
            userLayout i = new userLayout();
            i.addLabels(i.getContentPane());
            i.pack();
            i.setVisible(true);
            
            ArrayList<String> usr_data = readInfoFromUserDataFile(ID);
            i.display(usr_data);
        }
        else {
            message = outMsg.toString();
            System.out.println(message);
            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(message));
        }
    }//GEN-LAST:event_LoginActionPerformed

    private void CameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CameraActionPerformed
        
        webcam.setViewSize(WebcamResolution.VGA.getSize());
      
        webcam.open();
        
        WebcamPanel wpanel = new WebcamPanel(webcam);
        wpanel.setFPSDisplayed(true);
	wpanel.setDisplayDebugInfo(true);
	wpanel.setImageSizeDisplayed(true);
        
        JPanel panel = new javax.swing.JPanel();
	panel.add(wpanel);
	panel.setVisible(true);
        panel.revalidate();
        panel.repaint();
        
        
        Container pane = window.getContentPane();
        pane.add(cap, BorderLayout.SOUTH);
        cap.setText("Take Photo");
        cap.addActionListener(this);
        window.add(panel);
        window.setResizable(true);
        window.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        window.pack();
        
        window.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                System.out.println("closing");
                webcam.close();
                e.getWindow().dispose();
            }
        });
        
        window.setVisible(true);
    }//GEN-LAST:event_CameraActionPerformed

    
    @Override
    public void actionPerformed(ActionEvent e){
        count += 1;
        
        if(count == 1){
            
            BufferedImage oriImage = webcam.getImage();
            picture = oriImage;

            window.dispatchEvent(new WindowEvent(window, WindowEvent.WINDOW_CLOSING));
            
        }
        else{
            window.dispatchEvent(new WindowEvent(window, WindowEvent.WINDOW_CLOSING));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestClientLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestClientLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestClientLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestClientLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestClientLogin().setVisible(true);
            }
        });
    }
    
    public static ArrayList<String> readInfoFromUserDataFile(String id)
    {
        
        ArrayList<String> userData = new ArrayList<>();

        String userInfoLoc = "TestClientData/";
        String userDataName = "userinfo.dat";

        
        File f = new File(userInfoLoc + userDataName);

        //Try-catch in case file doesn't exist
        try
        {
	    //Scanner to read in the file
	    Scanner in = new Scanner(f);
	    String line;

	    //Read through each line in the file
	    while (in.hasNextLine())
	    {
		line = in.nextLine();

		//If the line being read contains the given id, it is the entry we want to read in
		if (line.contains(id))
		{
		   //Another scanner to read each comma-separated segment
		   Scanner reader = new Scanner(line);
		   reader.useDelimiter(",");

		   //Reads through every element in the line (name, gender, etc.) and add it to userData
		   while (reader.hasNext())
		   {
			  userData.add(reader.next());
		   }
		   reader.close();
		}
	    }
	    in.close();

        } catch (IOException ex)
        {
	    ex.printStackTrace();
        }

        return userData;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Camera;
    private javax.swing.JButton Login;
    private javax.swing.JButton SignUp;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField user_id;
    // End of variables declaration//GEN-END:variables

    private void close() {
        WindowEvent winClose = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClose);
        
    }
}
